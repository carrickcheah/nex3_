<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Customer Delivery Addresses | NexERP</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css">
    
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f7fa;
        }
        
        /* Table font size settings */
        #deliveryAddressesTable {
            font-size: 14px;
        }
        
        #deliveryAddressesTable thead th {
            font-size: 15px;
            font-weight: 600;
        }
        
        .card {
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            border: none;
        }
        
        .card-header {
            background: linear-gradient(135deg, #0669f4, #5441e9);
            color: white;
            border-radius: 8px 8px 0 0 !important;
            font-weight: 600;
            padding: 15px 20px;
            font-size: 14px;
        }
        
        .btn-primary {
            background-color: #0669f4;
            border-color: #0669f4;
        }
        
        .btn-primary:hover {
            background-color: #0558d6;
            border-color: #0558d6;
        }
        
        .btn-teal {
            background-color: #0669f4;
            border-color: #0558d6;
            color: white;
        }
        
        .btn-teal:hover {
            background-color: #0558d6;
            border-color: #0446b8;
            color: white;
        }
        
        .table {
            border-collapse: separate;
            border-spacing: 0;
            width: 100%;
        }
        
        .table th {
            background-color: #f8f9fa;
            font-weight: 600;
            white-space: nowrap;
        }
        
        .table-hover tbody tr:hover {
            background-color: rgba(6, 105, 244, 0.05);
        }
        
        .action-buttons .btn {
            margin-right: 5px;
        }
        
        /* Status indicators with icons */
        .status-text {
            display: inline-flex;
            align-items: center;
            font-weight: normal;
        }
        
        .status-text i {
            margin-right: 5px;
        }
        
        /* Badge styles */
        .badge-status {
            padding: 0.5em 0.75em;
            border-radius: 50px;
            font-weight: 500;
            display: inline-block;
            min-width: 80px;
            text-align: center;
        }
        
        .badge-active {
            background-color: #dcf9e5;
            color: #1f9254;
        }
        
        .badge-inactive {
            background-color: #fde8e8;
            color: #e02424;
        }
        
        .badge-default {
            background-color: #e0f2fe;
            color: #0284c7;
        }
        
        /* Column widths for better alignment */
        #deliveryAddressesTable th:nth-child(1), #deliveryAddressesTable td:nth-child(1) { width: 8%; }  /* Customer ID */
        #deliveryAddressesTable th:nth-child(2), #deliveryAddressesTable td:nth-child(2) { width: 15%; } /* Customer */
        #deliveryAddressesTable th:nth-child(3), #deliveryAddressesTable td:nth-child(3) { width: 12%; } /* Deliver To */
        #deliveryAddressesTable th:nth-child(4), #deliveryAddressesTable td:nth-child(4) { width: 12%; } /* Country Name */
        #deliveryAddressesTable th:nth-child(5), #deliveryAddressesTable td:nth-child(5) { width: 10%; } /* State */
        #deliveryAddressesTable th:nth-child(6), #deliveryAddressesTable td:nth-child(6) { width: 10%; } /* Area */
        #deliveryAddressesTable th:nth-child(7), #deliveryAddressesTable td:nth-child(7) { width: 8%; }  /* Postcode */
        #deliveryAddressesTable th:nth-child(8), #deliveryAddressesTable td:nth-child(8) { width: 7%; }  /* Default */
        #deliveryAddressesTable th:nth-child(9), #deliveryAddressesTable td:nth-child(9) { width: 8%; }  /* Status */
        #deliveryAddressesTable th:nth-child(10), #deliveryAddressesTable td:nth-child(10) { width: 10%; } /* Actions */
    </style>
</head>
<body>

<%- include('../../../shared/components/header', { title: title }) %>

<div class="container-fluid mt-4 px-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <a href="/page/sales/customer_setup" class="btn btn-outline-light btn-sm me-2">
                            <i class="fas fa-arrow-left me-1"></i>Back To Dashboard
                        </a>
                        <span class="ms-2 fs-5">Customer Delivery Addresses</span>
                    </div>
                    <a href="/page/sales/delivery-address/add" class="btn btn-light btn-sm">
                        <i class="fas fa-plus me-1"></i>Add New Delivery Address
                    </a>
                </div>
                <div class="card-body">
                    <!-- Search and filter controls -->
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-search"></i></span>
                                <input type="text" id="searchCustomer" class="form-control" placeholder="Search by Customer">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-search"></i></span>
                                <input type="text" id="searchDeliverTo" class="form-control" placeholder="Search by Deliver To">
                            </div>
                        </div>
                        <div class="col-md-4 text-end">
                            <select id="page-size" class="form-select d-inline-block w-auto me-2">
                                <option value="50" selected>50 per page</option>
                                <option value="100">100 per page</option>
                                <option value="250">250 per page</option>
                                <option value="500">500 per page</option>
                            </select>
                            <button id="applyFilters" class="btn btn-primary">
                                <i class="fas fa-filter me-1"></i> Apply Filters
                            </button>
                        </div>
                    </div>
                    
                    <!-- Delivery Addresses table -->
                    <div class="table-responsive">
                        <table id="deliveryAddressesTable" class="table table-hover">
                            <thead>
                                <tr>
                                    <th class="text-start">CUSTOMER ID</th>
                                    <th class="text-start">CUSTOMER</th>
                                    <th class="text-start">DELIVER TO</th>
                                    <th class="text-start">COUNTRY NAME</th>
                                    <th class="text-start">STATE</th>
                                    <th class="text-start">AREA</th>
                                    <th class="text-start">POSTCODE</th>
                                    <th class="text-start">DEFAULT</th>
                                    <th class="text-start">STATUS</th>
                                    <th class="text-start">ACTIONS</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Table body will be populated by JavaScript -->
                            </tbody>
                        </table>
                    </div>
                    
                    <!-- Pagination -->
                    <nav aria-label="Delivery address pagination" class="mt-3">
                        <ul id="pagination" class="pagination justify-content-center">
                            <!-- Pagination will be populated by JavaScript -->
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this delivery address?</p>
                <p>This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js"></script>

<script>
    $(document).ready(function() {
        let currentPage = 1;
        let pageSize = 50;
        let totalPages = 0;
        
        // Initial data load
        loadDeliveryAddresses();
        
        // Apply filters
        $('#applyFilters').on('click', function() {
            currentPage = 1;
            loadDeliveryAddresses();
        });
        
        // Handle Enter key in search fields
        $('#searchCustomer, #searchDeliverTo').on('keypress', function(e) {
            if (e.which === 13) {
                currentPage = 1;
                loadDeliveryAddresses();
            }
        });
        
        // Page size change
        $('#page-size').on('change', function() {
            pageSize = $(this).val();
            currentPage = 1;
            loadDeliveryAddresses();
        });
        
        // Function to load delivery addresses with pagination and filters
        function loadDeliveryAddresses() {
            const customerName = $('#searchCustomer').val();
            const deliverTo = $('#searchDeliverTo').val();
            
            console.log('Loading delivery addresses with filters:', {
                page: currentPage,
                limit: pageSize,
                customerName: customerName,
                deliverTo: deliverTo
            });
            
            $.ajax({
                url: '/api/sales/delivery-address',
                type: 'GET',
                data: {
                    page: currentPage,
                    limit: pageSize,
                    search: customerName || deliverTo || ''
                },
                success: function(response) {
                    console.log('API Response:', response);
                    
                    if (response.success) {
                        renderDeliveryAddresses(response.data);
                        renderPagination(response.pagination);
                    } else {
                        console.error('Error in API response:', response.message);
                        alert('Error loading delivery addresses: ' + response.message);
                    }
                },
                error: function(xhr, status, error) {
                    console.error('API Error:', error);
                    alert('Error loading delivery addresses: ' + (xhr.responseJSON?.message || 'Unknown error'));
                }
            });
        }
        
        // Function to render delivery addresses table
        function renderDeliveryAddresses(addresses) {
            const tbody = $('#deliveryAddressesTable tbody');
            tbody.empty();
            
            if (addresses.length === 0) {
                tbody.append('<tr><td colspan="10" class="text-center">No delivery addresses found</td></tr>');
                return;
            }
            
            addresses.forEach(function(address) {
                const row = $('<tr>');
                
                row.append(`<td class="text-start">${address['customer id'] || ''}</td>`);
                row.append(`<td class="text-start">${address['customer'] || ''}</td>`);
                row.append(`<td class="text-start">${address['delivery to'] || ''}</td>`);
                row.append(`<td class="text-start">${address['country'] || ''}</td>`);
                row.append(`<td class="text-start">${address['state'] || ''}</td>`);
                row.append(`<td class="text-start">${address['area'] || ''}</td>`);
                row.append(`<td class="text-start">${address['postcode'] || ''}</td>`);
                
                // Default column
                row.append(`<td class="text-start">
                    ${address['default'] === 1 ? 
                     '<span class="badge badge-status badge-default">Default</span>' : 
                     ''}
                </td>`);
                
                // Status column
                let statusIcon = address['status'] === 1 ? 
                    '<i class="fas fa-check-circle" style="color: #28a745;"></i>' : 
                    '<i class="fas fa-times-circle" style="color: #dc3545;"></i>';
                    
                let statusText = address['status'] === 1 ? 'Active' : 'Inactive';
                
                row.append(`<td class="text-start">
                    <span class="status-text">${statusIcon} ${statusText}</span>
                </td>`);
                
                // Actions column
                row.append(`<td class="text-start">
                    <div class="action-buttons">
                        <a href="/page/sales/delivery-address/view/${address['customer id']}" class="btn btn-sm btn-outline-primary" title="View">
                            <i class="fas fa-eye"></i>
                        </a>
                        <a href="/page/sales/delivery-address/edit/${address['customer id']}" class="btn btn-sm btn-outline-secondary" title="Edit">
                            <i class="fas fa-edit"></i>
                        </a>
                        <a href="javascript:void(0);" class="btn btn-sm btn-outline-danger delete-btn" data-id="${address['customer id']}" title="Delete">
                            <i class="fas fa-trash"></i>
                        </a>
                    </div>
                </td>`);
                
                tbody.append(row);
            });
            
            // Handle delete button click
            $('.delete-btn').on('click', function() {
                const deliveryId = $(this).data('id');
                $('#confirmDeleteBtn').data('id', deliveryId);
                $('#deleteConfirmationModal').modal('show');
            });
        }
        
        // Function to render pagination
        function renderPagination(pagination) {
            const paginationEl = $('#pagination');
            paginationEl.empty();
            
            totalPages = pagination.pages || Math.ceil(pagination.total / pageSize);
            const currentPageNum = pagination.page || currentPage;
            
            // Previous button
            paginationEl.append(`
                <li class="page-item ${currentPageNum <= 1 ? 'disabled' : ''}">
                    <a class="page-link" href="#" data-page="${currentPageNum - 1}">Previous</a>
                </li>
            `);
            
            // Page numbers
            const startPage = Math.max(1, currentPageNum - 2);
            const endPage = Math.min(startPage + 4, totalPages);
            
            for (let i = startPage; i <= endPage; i++) {
                paginationEl.append(`
                    <li class="page-item ${i === currentPageNum ? 'active' : ''}">
                        <a class="page-link" href="#" data-page="${i}">${i}</a>
                    </li>
                `);
            }
            
            // Next button
            paginationEl.append(`
                <li class="page-item ${currentPageNum >= totalPages ? 'disabled' : ''}">
                    <a class="page-link" href="#" data-page="${currentPageNum + 1}">Next</a>
                </li>
            `);
            
            // Pagination click event
            $('.page-link').on('click', function(e) {
                e.preventDefault();
                const page = $(this).data('page');
                
                if (page < 1 || page > totalPages || page === currentPage) {
                    return;
                }
                
                currentPage = page;
                loadDeliveryAddresses();
            });
        }
        
        // Handle confirm delete button click
        $('#confirmDeleteBtn').on('click', function() {
            const deliveryId = $(this).data('id');
            
            $.ajax({
                url: `/api/sales/delivery-address/${deliveryId}`,
                type: 'DELETE',
                success: function(response) {
                    if (response.success) {
                        $('#deleteConfirmationModal').modal('hide');
                        loadDeliveryAddresses();
                        alert('Delivery address deleted successfully!');
                    } else {
                        alert('Failed to delete delivery address: ' + response.message);
                    }
                },
                error: function(xhr) {
                    console.error('Error deleting delivery address:', xhr);
                    let errorMessage = 'An error occurred while deleting the delivery address.';
                    
                    try {
                        const response = JSON.parse(xhr.responseText);
                        if (response && response.message) {
                            errorMessage = response.message;
                        }
                    } catch (e) {
                        // Use default error message
                    }
                    
                    alert(errorMessage);
                }
            });
        });
    });
</script>
</body>
</html> 
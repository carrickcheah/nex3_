<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Customer Billing Address | NexERP</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css">
    
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f7fa;
        }
        
        /* Table font size settings */
        #billingAddressTable {
            font-size: 14px;
        }
        
        #billingAddressTable thead th {
            font-size: 15px;
            font-weight: 600;
        }
        
        .card {
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            border: none;
        }
        
        .card-header {
            background: linear-gradient(135deg, #0669f4, #5441e9);
            color: white;
            border-radius: 8px 8px 0 0 !important;
            font-weight: 600;
            padding: 15px 20px;
            font-size: 14px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .card-header h5 {
            margin-bottom: 0;
            font-weight: 600;
            color: white;
        }
        
        .btn-primary {
            background-color: #0669f4;
            border-color: #0669f4;
        }
        
        .btn-primary:hover {
            background-color: #0558d6;
            border-color: #0558d6;
        }
        
        .btn-success {
            background-color: #45a164;
            border-color: #45a164;
        }
        
        .btn-success:hover {
            background-color: #3b8a55;
            border-color: #3b8a55;
        }
        
        .btn-danger {
            background-color: #e55353;
            border-color: #e55353;
        }
        
        .btn-danger:hover {
            background-color: #d03b3b;
            border-color: #d03b3b;
        }
        
        .table {
            border-collapse: separate;
            border-spacing: 0;
            width: 100%;
        }
        
        .table th {
            background-color: #f8f9fa;
            font-weight: 600;
            white-space: nowrap;
            color: #3c4b64;
            border-top: none;
            text-align: center;
            position: relative;
            cursor: pointer;
        }
        
        .table th.sort-asc:after {
            content: '↑';
            position: absolute;
            right: 8px;
            color: #0669f4;
        }
        
        .table th.sort-desc:after {
            content: '↓';
            position: absolute;
            right: 8px;
            color: #0669f4;
        }
        
        .table td {
            vertical-align: middle;
            text-align: center;
        }
        
        .table-hover tbody tr:hover {
            background-color: rgba(6, 105, 244, 0.05);
        }
        
        .badge {
            font-weight: 500;
            padding: 0.5em 0.75em;
        }
        
        /* Column widths for better alignment */
        #billingAddressTable th:nth-child(1), #billingAddressTable td:nth-child(1) { width: 5%; }  /* No */
        #billingAddressTable th:nth-child(2), #billingAddressTable td:nth-child(2) { width: 15%; } /* Customer */
        #billingAddressTable th:nth-child(3), #billingAddressTable td:nth-child(3) { width: 10%; } /* Internal ID */
        #billingAddressTable th:nth-child(4), #billingAddressTable td:nth-child(4) { width: 15%; } /* Location Name */
        #billingAddressTable th:nth-child(5), #billingAddressTable td:nth-child(5) { width: 10%; } /* Country Name */
        #billingAddressTable th:nth-child(6), #billingAddressTable td:nth-child(6) { width: 10%; } /* State */
        #billingAddressTable th:nth-child(7), #billingAddressTable td:nth-child(7) { width: 10%; } /* City */
        #billingAddressTable th:nth-child(8), #billingAddressTable td:nth-child(8) { width: 10%; } /* Postcode */
        #billingAddressTable th:nth-child(9), #billingAddressTable td:nth-child(9) { width: 5%; }  /* Default */
        #billingAddressTable th:nth-child(10), #billingAddressTable td:nth-child(10) { width: 5%; } /* Status */
        #billingAddressTable th:nth-child(11), #billingAddressTable td:nth-child(11) { width: 5%; } /* Actions */
        
        /* Search and filter controls */
        .input-group .input-group-text {
            background-color: #f5f8fa;
            border-right: none;
        }
        
        .input-group .form-control {
            border-left: none;
        }
        
        /* Pagination styles */
        .pagination-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
        }
        
        .pagination {
            margin-bottom: 0;
        }
        
        .pagination .page-link {
            color: #0669f4;
        }
        
        .pagination .page-item.active .page-link {
            background-color: #0669f4;
            border-color: #0669f4;
        }
    </style>
</head>
<body>

<%- include('../../../shared/components/header') %>

<div class="container-fluid mt-4 px-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <a href="/page/sales/customer_setup" class="btn btn-outline-light btn-sm me-2">
                            <i class="fas fa-arrow-left me-1"></i>Back
                        </a>
                        <span class="ms-2 fs-5">Customer Billing Address</span>
                    </div>
                    <a href="/page/sales/billing-address/add" class="btn btn-light btn-sm">
                        <i class="fas fa-plus me-1"></i>Add Billing Address
                    </a>
                </div>
                <div class="card-body">
                    <!-- Search and filter controls -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-search"></i>
                                </span>
                                <input type="text" id="searchInput" class="form-control" placeholder="Search customer, internal ID, location, or country...">
                                <button id="applyFilters" class="btn btn-primary ms-2">
                                    <i class="fas fa-filter me-1"></i>Apply Filters
                                </button>
                            </div>
                        </div>
                        <div class="col-md-6 text-end">
                            <div class="d-flex justify-content-end align-items-center">
                                <label class="me-2 text-nowrap">Show</label>
                                <select id="rowsPerPage" class="form-select me-2" style="width: auto;">
                                    <option value="10">10</option>
                                    <option value="25">25</option>
                                    <option value="50" selected>50</option>
                                    <option value="100">100</option>
                                </select>
                                <span>entries</span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Billing Addresses Table -->
                    <div class="table-responsive">
                        <table id="billingAddressTable" class="table table-hover">
                            <thead>
                                <tr>
                                    <th class="text-center sortable" data-sort="seq_no">Seq. No</th>
                                    <th class="text-center sortable" data-sort="customer">Customer</th>
                                    <th class="text-center sortable" data-sort="internal_id">Internal ID</th>
                                    <th class="text-center sortable" data-sort="location_name">Location Name</th>
                                    <th class="text-center sortable" data-sort="country_name">Country Name</th>
                                    <th class="text-center sortable" data-sort="state">State</th>
                                    <th class="text-center sortable" data-sort="area_city">City</th>
                                    <th class="text-center sortable" data-sort="postcode">Postcode</th>
                                    <th class="text-center sortable" data-sort="default">Default</th>
                                    <th class="text-center sortable" data-sort="status">Status</th>
                                    <th class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="billingAddressTableBody">
                                <!-- Table content will be loaded via AJAX -->
                            </tbody>
                        </table>
                    </div>
                    
                    <!-- Pagination -->
                    <div class="pagination-container">
                        <div id="tableInfo">Showing 0 to 0 of 0 entries</div>
                        <nav aria-label="Page navigation">
                            <ul id="pagination" class="pagination"></ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this billing address? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmDelete" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript libraries -->
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"></script>

<!-- JavaScript code -->
<script>
$(document).ready(function() {
    let currentPage = 1;
    let limit = 50;
    let search = '';
    let sortField = 'customer';
    let sortOrder = 'asc';
    let totalPages = 0;
    let deleteAddressId = null;
    
    // Initial load
    loadBillingAddresses(currentPage, limit, search, sortField, sortOrder);
    
    // Set sort indicator on initial load
    $(`.sortable[data-sort='${sortField}']`).addClass(`sort-${sortOrder}`);
    
    // Event handlers for search
    $('#searchInput').on('keyup', function(e) {
        if (e.key === 'Enter') {
            search = $(this).val().trim();
            currentPage = 1;
            loadBillingAddresses(currentPage, limit, search, sortField, sortOrder);
        }
    });
    
    // Event handler for apply filters button
    $('#applyFilters').on('click', function() {
        search = $('#searchInput').val().trim();
        currentPage = 1;
        loadBillingAddresses(currentPage, limit, search, sortField, sortOrder);
    });
    
    // Event handler for rows per page selection
    $('#rowsPerPage').on('change', function() {
        limit = parseInt($(this).val());
        currentPage = 1;
        loadBillingAddresses(currentPage, limit, search, sortField, sortOrder);
    });
    
    // Event handler for sortable columns
    $('.sortable').on('click', function() {
        const newSortField = $(this).data('sort');
        
        // If clicking the same column, toggle sort order
        if (newSortField === sortField) {
            sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';
        } else {
            sortField = newSortField;
            sortOrder = 'asc';
        }
        
        // Update sorting UI
        $('.sortable').removeClass('sort-asc sort-desc');
        $(this).addClass(`sort-${sortOrder}`);
        
        // Reset to first page when sorting
        currentPage = 1;
        loadBillingAddresses(currentPage, limit, search, sortField, sortOrder);
    });
    
    // Handle delete button click
    $(document).on('click', '.btn-delete', function() {
        deleteAddressId = $(this).data('id');
        
        // Show delete confirmation modal
        const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        deleteModal.show();
    });
    
    // Confirm delete button click
    $('#confirmDelete').on('click', function() {
        if (deleteAddressId) {
            deleteBillingAddress(deleteAddressId);
        }
    });
    
    // Function to load billing addresses with pagination, search, and sorting
    function loadBillingAddresses(page, limit, search, sortField, sortOrder) {
        $.ajax({
            url: '/api/sales/billing-address',
            type: 'GET',
            data: { 
                page: page, 
                limit: limit, 
                search: search, 
                sortField: sortField, 
                sortOrder: sortOrder 
            },
            success: function(response) {
                if (response.success) {
                    displayBillingAddresses(response.data);
                    setupPagination(response.pagination);
                    updateTableInfo(response.pagination);
                } else {
                    alert('Failed to load billing addresses: ' + response.message);
                }
            },
            error: function(xhr) {
                console.error('Error loading billing addresses:', xhr);
                alert('An error occurred while loading billing addresses. Please try again.');
            }
        });
    }
    
    // Function to display billing addresses in the table
    function displayBillingAddresses(addresses) {
        const tableBody = $('#billingAddressTableBody');
        tableBody.empty();
        
        if (addresses.length === 0) {
            tableBody.append(`
                <tr>
                    <td colspan="11" class="text-center">No billing addresses found</td>
                </tr>
            `);
            return;
        }
        
        addresses.forEach((address, index) => {
            const rowNum = (currentPage - 1) * limit + index + 1;
            
            const statusBadge = address.status === 1 
                ? '<span class="badge bg-success">Active</span>' 
                : '<span class="badge bg-danger">Inactive</span>';
            
            const defaultBadge = address.is_default === 1
                ? '<span class="badge bg-success">Yes</span>'
                : '<span class="badge bg-secondary">No</span>';

            tableBody.append(`
                <tr>
                    <td class="text-center">${rowNum}</td>
                    <td class="text-center">${address.customer_name || ''}</td>
                    <td class="text-center">${address.internal_id || ''}</td>
                    <td class="text-center">${address.location_name || ''}</td>
                    <td class="text-center">${address.country_name || ''}</td>
                    <td class="text-center">${address.state || ''}</td>
                    <td class="text-center">${address.area_city || ''}</td>
                    <td class="text-center">${address.postcode || ''}</td>
                    <td class="text-center">${defaultBadge}</td>
                    <td class="text-center">${statusBadge}</td>
                    <td class="text-center">
                        <div class="d-flex justify-content-center">
                            <a href="/page/sales/billing-address/view/${address.billing_id}" class="btn btn-sm btn-outline-primary me-1" title="View">
                                <i class="fas fa-eye"></i>
                            </a>
                            <a href="/page/sales/billing-address/edit/${address.billing_id}" class="btn btn-sm btn-outline-secondary me-1" title="Edit">
                                <i class="fas fa-edit"></i>
                            </a>
                            <button class="btn btn-sm btn-outline-danger btn-delete" data-id="${address.billing_id}" title="Delete">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `);
        });
    }

    // Function to set up pagination
    function setupPagination(pagination) {
        const paginationElement = $('#pagination');
        paginationElement.empty();

        totalPages = Math.ceil(pagination.total / pagination.limit);

        // Previous button
        paginationElement.append(`
            <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" data-page="${currentPage - 1}" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        `);

        // Page numbers
        const startPage = Math.max(1, currentPage - 2);
        const endPage = Math.min(totalPages, startPage + 4);

        for (let i = startPage; i <= endPage; i++) {
            paginationElement.append(`
                <li class="page-item ${i === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#" data-page="${i}">${i}</a>
                </li>
            `);
        }

        // Next button
        paginationElement.append(`
            <li class="page-item ${currentPage === totalPages || totalPages === 0 ? 'disabled' : ''}">
                <a class="page-link" href="#" data-page="${currentPage + 1}" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        `);

        // Page click event
        $('.page-link').on('click', function(e) {
            e.preventDefault();
            const page = $(this).data('page');
            
            if (page < 1 || page > totalPages || page === currentPage) {
                return;
            }
            
            currentPage = page;
            loadBillingAddresses(currentPage, limit, search, sortField, sortOrder);
        });
    }

    // Function to update table info text
    function updateTableInfo(pagination) {
        const start = pagination.total === 0 ? 0 : (currentPage - 1) * pagination.limit + 1;
        const end = Math.min(currentPage * pagination.limit, pagination.total);
        $('#tableInfo').text(`Showing ${start} to ${end} of ${pagination.total} entries`);
    }

    // Function to delete a billing address
    function deleteBillingAddress(billingId) {
        $.ajax({
            url: `/api/sales/billing-address/${billingId}`,
            type: 'DELETE',
            success: function(response) {
                if (response.success) {
                    const deleteModal = bootstrap.Modal.getInstance(document.getElementById('deleteModal'));
                    deleteModal.hide();
                    loadBillingAddresses(currentPage, limit, search, sortField, sortOrder);
                    alert('Billing address deleted successfully');
                } else {
                    alert('Failed to delete billing address: ' + response.message);
                }
            },
            error: function(xhr) {
                console.error('Error deleting billing address:', xhr);
                alert('An error occurred while deleting the billing address. Please try again.');
            }
        });
    }
});
</script>
</body>
</html>

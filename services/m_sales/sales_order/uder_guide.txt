Key Files for Sales Order Management
sales_order.inc.php:
Core functionality for Sales Order operations (new, edit, view)
Contains functions like ebos_sales_order_new(), ebos_sales_order_edit(), ebos_sales_order_view(), and ebos_sales_order_read()
Handles the data loading and preparation for order forms
sales_common.inc.php:
Contains shared functions for all sales modules
Has database functions like sales_insert_txn_v2(), sales_update_txn_v2(), and sales_delete_txn_items_v2()
Includes table rendering functions like generate_sales_table_row()
common.inc.php:
General utility functions used across the system
Has functions for batch management, inventory availability checks, and pricing calculations
Main Logic Flow for Sales Orders
Creating a New Sales Order:
ebos_sales_order_new() is called
Session variables are initialized for the order
Default values are set
The order form is rendered via ebos_sales_order_render()
Viewing a Sales Order:
ebos_sales_order_view() is called
Calls ebos_sales_order_read() to load the order data
Session variables are populated with order details
The order view is rendered with read-only permissions
Editing a Sales Order:
ebos_sales_order_edit() is called
Calls ebos_sales_order_read() to load the order data
Session variables are populated with order details
The order edit form is rendered with edit permissions
Order Data Storage and Retrieval:
Orders are stored in tbl_sales_txn table
Order items are stored in related tables
Various fields track the order status, customer details, dates, etc.
Functions reference parent-child relationships with other documents (like quotations)
Integration Points:
Sales orders can be created from quotations (parent_txntype = 41)
Orders can lead to delivery notes (child_txntype includes 45)
Inventory availability is checked during order creation






1. Retrieving a Sales Order:
SELECT s.*, c.cust_name, c.prod_code
FROM tbl_sales_txn s 
LEFT JOIN tbl_customer c ON c.CustId_i = s.cust_id
WHERE s.TxnId_i = $txn_id AND s.txntype_id = 43



2. Retrieving Sales Order Items:
SELECT s.*, t.doc_ref as parent_ref, p.stk_code, 
       c.StkCode_v AS stock_sku, 
       c.ProdName_v AS stock_name,			
       u.stk_code, u.prod_name, u.stock_descr, u.UomCode_v, u.hscode_code
FROM tbl_sales_order_item s 
LEFT JOIN tbl_sales_txn t ON t.txn_id = s.parent_id
LEFT JOIN tbl_product_code p ON p.StkId_i = s.stk_id
LEFT JOIN tbl_product_code c ON c.ItemId_i = s.ItemId_i AND c.Alias_c='0'
LEFT JOIN tbl_product_master m ON m.ItemId_i = s.ItemId_i
LEFT JOIN tbl_doc_itm u ON u.doc_itm = s.doc_itm
WHERE s.TxnId_i = $txn_id ORDER BY s.id


3. Inserting a Sales Order (from sales_insert_txn_v2):
INSERT INTO tbl_sales_txn (
  SiteId_i, LocId_i, TxntypeId_i, CustId_i, DocRef_v, CustRef_v,
  TxnDate_dd, ExpiryDate_dd, CbaId_i, CctId_i, CsaId_i, DocCba_v, DocCsa_v,
  CbaContact_v, PtermId_i, CurrId_i, CurrRate_d, StermId_i, SpolicyId_i, TaxReg_c,
  SubTotal_d, TaxTotal_d, Rounding_d, GrandTotal_d, Allocated_d, Outstanding_d,
  HsIds_v, BankId_i, DocRemark_t, OwnerId_i, CreateId_i, UpdateId_i
) VALUES (
  :site_id, :loc_id, :txntype_id, :cust_id, :doc_ref, :cust_ref,
  :txn_date, :expiry_date, :cba_id, :cct_id, :csa_id, :doc_cba, :doc_csa,
  :cba_contact, :pterm_id, :curr_id, :curr_rate, :sterm_id, :spolicy_id, :tax_reg,
  :sub_total, :tax_total, :rounding, :grand_total, :allocated, :outstanding,
  :hs_ids, :bank_id, :doc_remark, :owner_id, :create_id, :update_id
)


4. Inserting Sales Order Items (from sales_insert_txn_items_v2):
INSERT INTO tbl_sales_order_item (
  TxnId_i, RowId_i, ProwId_i, ParentId_i, CurrId_i, DocItm_i, ItemId_i, StkId_i, UomId_i,
  QtyDecimal_i, PriceDecimal_i, Qty_d, Price_d, Discount_d, DiscountFlag_c, 
  DiscountAmount_d, ActualPrice_d, LineTotal_d, CreateId_i, UpdateId_i
) VALUES (
  :txn_id, :row_id, :prow_id, :parent_id, :curr_id, :doc_itm, :item_id, :stk_id, :uom_id,
  :qty_decimal, :price_decimal, :qty, :price, :discount, :discount_flag,
  :discount_amount, :actual_price, :line_total, :create_id, :update_id
)

5. Updating a Sales Order:
UPDATE tbl_sales_txn SET
  SiteId_i = :site_id, LocId_i = :loc_id, CustId_i = :cust_id, DocRef_v = :doc_ref,
  CustRef_v = :cust_ref, TxnDate_dd = :txn_date, ExpiryDate_dd = :expiry_date,
  CbaId_i = :cba_id, CctId_i = :cct_id, CsaId_i = :csa_id, DocCba_v = :doc_cba,
  DocCsa_v = :doc_csa, CbaContact_v = :cba_contact, PtermId_i = :pterm_id,
  CurrId_i = :curr_id, CurrRate_d = :curr_rate, StermId_i = :sterm_id,
  SpolicyId_i = :spolicy_id, TaxReg_c = :tax_reg, SubTotal_d = :sub_total,
  TaxTotal_d = :tax_total, Rounding_d = :rounding, GrandTotal_d = :grand_total,
  Allocated_d = :allocated, Outstanding_d = :outstanding, HsIds_v = :hs_ids,
  BankId_i = :bank_id, DocRemark_t = :doc_remark, OwnerId_i = :owner_id,
  UpdateId_i = :update_id
WHERE TxnId_i = :txn_id





6. Deleting Sales Order Items:
DELETE FROM tbl_sales_order_item WHERE TxnId_i = $txn_id






























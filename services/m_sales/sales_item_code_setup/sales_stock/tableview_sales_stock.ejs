<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Stock Code Setup | NexERP</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css">
    
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f7fa;
        }
        
        /* Table font size settings */
        #stockCodeTable {
            font-size: 14px;
        }
        
        #stockCodeTable thead th {
            font-size: 15px;
            font-weight: 600;
        }
        
        .card {
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            border: none;
        }
        
        .card-header {
            background: linear-gradient(135deg, #0669f4, #5441e9);
            color: white;
            border-radius: 8px 8px 0 0 !important;
            font-weight: 600;
            padding: 15px 20px;
            font-size: 14px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .card-header h5 {
            margin-bottom: 0;
            font-weight: 600;
            color: white;
        }
        
        .btn-primary {
            background-color: #0669f4;
            border-color: #0669f4;
        }
        
        .btn-primary:hover {
            background-color: #0558d6;
            border-color: #0558d6;
        }
        
        .btn-success {
            background-color: #45a164;
            border-color: #45a164;
        }
        
        .btn-success:hover {
            background-color: #3b8a55;
            border-color: #3b8a55;
        }
        
        .btn-danger {
            background-color: #e55353;
            border-color: #e55353;
        }
        
        .btn-danger:hover {
            background-color: #d03b3b;
            border-color: #d03b3b;
        }
        
        .table {
            border-collapse: separate;
            border-spacing: 0;
            width: 100%;
        }
        
        .table th {
            background-color: #f8f9fa;
            font-weight: 600;
            white-space: nowrap;
            color: #3c4b64;
            border-top: none;
            text-align: center;
            position: relative;
            cursor: pointer;
        }
        
        .table th.sort-asc:after {
            content: '↑';
            position: absolute;
            right: 8px;
            color: #0669f4;
        }
        
        .table th.sort-desc:after {
            content: '↓';
            position: absolute;
            right: 8px;
            color: #0669f4;
        }
        
        .table td {
            vertical-align: middle;
            text-align: center;
        }
        
        .table-hover tbody tr:hover {
            background-color: rgba(6, 105, 244, 0.05);
        }
        
        .badge {
            font-weight: 500;
            padding: 0.5em 0.75em;
        }
        
        /* Column widths for better alignment */
        #stockCodeTable th:nth-child(1), #stockCodeTable td:nth-child(1) { width: 5%; }  /* No */
        #stockCodeTable th:nth-child(2), #stockCodeTable td:nth-child(2) { width: 20%; } /* Stock Code */
        #stockCodeTable th:nth-child(3), #stockCodeTable td:nth-child(3) { width: 30%; } /* Product Name */
        #stockCodeTable th:nth-child(4), #stockCodeTable td:nth-child(4) { width: 10%; } /* Base UOM */
        #stockCodeTable th:nth-child(5), #stockCodeTable td:nth-child(5) { width: 10%; } /* Price Decimal */
        #stockCodeTable th:nth-child(6), #stockCodeTable td:nth-child(6) { width: 10%; } /* Status */
        #stockCodeTable th:nth-child(7), #stockCodeTable td:nth-child(7) { width: 15%; } /* Actions */
        
        /* Search and filter controls */
        .input-group .input-group-text {
            background-color: #f5f8fa;
            border-right: none;
        }
        
        .input-group .form-control {
            border-left: none;
        }
        
        /* Pagination styles */
        .pagination-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
        }
        
        .pagination {
            margin-bottom: 0;
        }
        
        .pagination .page-link {
            color: #0669f4;
        }
        
        .pagination .page-item.active .page-link {
            background-color: #0669f4;
            border-color: #0669f4;
        }

        /* Action Button Styles Matching Provided Image */
        .action-btn {
            display: inline-flex; 
            align-items: center;
            justify-content: center;
            padding: 5px; /* Adjust padding for square look */
            text-decoration: none;
            border-radius: 4px; /* Slightly rounded corners like image */
            font-size: 0.8rem; 
            transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out;
            text-align: center;
            border: 1px solid; /* Set border */
            cursor: pointer;
            margin: 0 2px; 
            width: 34px; /* Adjust size */
            height: 34px; /* Adjust size */
            background-color: #ffffff; /* White background */
        }

        .action-btn:hover {
            background-color: #f8f9fa; /* Light grey background on hover */
        }

        .action-btn-view {
            border-color: #0d6efd; /* Blue border */
        }
        .action-btn-view i {
             color: #0d6efd; /* Blue icon */
        }
        .action-btn-view:hover {
             background-color: #e7f1ff; /* Lighter blue background */
             border-color: #0a58ca;
        }

        .action-btn-edit {
            border-color: #6c757d; /* Grey border */
        }
         .action-btn-edit i {
             color: #6c757d; /* Grey icon */
        }
        .action-btn-edit:hover {
            background-color: #e2e6ea; /* Lighter grey background */
            border-color: #5c636a;
        }

        .action-btn-delete {
            border-color: #dc3545; /* Red border */
        }
        .action-btn-delete i {
            color: #dc3545; /* Red icon */
        }
         .action-btn-delete:hover {
            background-color: #f8d7da; /* Lighter red background */
            border-color: #b02a37;
        }

        /* Ensure icons fit well */
        .action-btn i {
            font-size: 1em; /* Adjust icon size if needed */
            line-height: 1; 
            margin: 0; /* Remove potential default margins */
        }
    </style>
</head>
<body>

<%- include('../../../shared/components/header.ejs') %>

<div class="container-fluid mt-4 px-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <a href="/page/sales/item-setup" class="btn btn-outline-light btn-sm me-2">
                            <i class="fas fa-arrow-left me-1"></i>Back To Dashboard
                        </a>
                        <span class="ms-2 fs-5">Sales Stock Code Setup</span>
                    </div>
                    <a href="/page/sales/stock_code_setup/add" class="btn btn-light btn-sm">
                        <i class="fas fa-plus me-1"></i>Add Stock Code
                    </a>
                </div>
                <div class="card-body">
                    <!-- Search and filter controls -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-search"></i>
                                </span>
                                <input type="text" id="searchInput" class="form-control" placeholder="Search stock code, product name...">
                                <button id="applyFilters" class="btn btn-primary ms-2">
                                    <i class="fas fa-filter me-1"></i>Apply Filters
                                </button>
                            </div>
                        </div>
                        <div class="col-md-6 text-end">
                            <div class="d-flex justify-content-end align-items-center">
                                <label class="me-2 text-nowrap">Show</label>
                                <select id="rowsPerPage" class="form-select me-2" style="width: auto;">
                                    <option value="50" selected>50 per page</option>
                                    <option value="100">100 per page</option>
                                    <option value="250">250 per page</option>
                                    <option value="500">500 per page</option>
                                </select>
                                <span>entries</span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Stock Codes Table -->
                    <div class="table-responsive">
                        <table id="stockCodeTable" class="table table-hover">
                            <thead>
                                <tr>
                                    <th class="text-center sortable" data-sort="id">NO</th>
                                    <th class="text-center sortable" data-sort="stock_code">STOCK CODE</th>
                                    <th class="text-center sortable" data-sort="product_name">PRODUCT NAME</th>
                                    <th class="text-center sortable" data-sort="base_uom">BASE UOM</th>
                                    <th class="text-center sortable" data-sort="price_decimal">PRICE DECIMAL</th>
                                    <th class="text-center sortable" data-sort="status">STATUS</th>
                                    <th class="text-center">ACTIONS</th>
                                </tr>
                            </thead>
                            <tbody id="stockCodeTableBody">
                                <!-- Table content will be loaded via AJAX -->
                            </tbody>
                        </table>
                    </div>
                    
                    <!-- Pagination -->
                    <div class="pagination-container">
                        <div id="tableInfo">Showing 0 to 0 of 0 entries</div>
                        <nav aria-label="Page navigation">
                            <ul id="pagination" class="pagination"></ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
$(document).ready(function() {
    // State variables for table management
    let currentPage = 1;
    let limit = 50;
    let search = '';
    let sortField = 'id'; // Default sort by ID/NO
    let sortOrder = 'asc';
    let totalPages = 0;
    
    // Initial load
    loadStockCodes();
    
    // Load stock codes with current filters and sorting
    function loadStockCodes() {
        $.ajax({
            url: '/page/sales/stock_code_setup/api/sales/stock-codes', // Corrected URL prefix
            type: 'GET',
            data: {
                page: currentPage,
                limit: limit,
                search: search,
                sort_field: sortField,
                sort_order: sortOrder
            },
            success: function(response) {
                if (response.success) {
                    renderStockCodes(response.data);
                    renderPagination(response.pagination);
                    updateTableInfo(response.pagination);
                } else {
                    $('#stockCodeTableBody').html('<tr><td colspan="7" class="text-center">Failed to load stock codes</td></tr>');
                }
            },
            error: function() {
                $('#stockCodeTableBody').html('<tr><td colspan="7" class="text-center">Error loading stock codes</td></tr>');
            }
        });
    }
    
    // Render stock codes to table
    function renderStockCodes(data) {
        let html = '';
        const startIndex = ((currentPage - 1) * limit) + 1;
        
        if (data.length === 0) {
            html = `<tr><td colspan="7" class="text-center">No stock codes found</td></tr>`;
        } else {
            data.forEach(function(item, index) {
                const statusBadge = item.status === 1 
                    ? '<span class="badge bg-success">Active</span>' 
                    : '<span class="badge bg-danger">Inactive</span>';
                
                html += `
                <tr>
                    <td class="text-center">${startIndex + index}</td>
                    <td class="text-left">${item.stock_code || ''}</td>
                    <td class="text-left">${item.product_name || ''}</td>
                    <td class="text-center">${item.base_uom || ''}</td>
                    <td class="text-center">${item.price_decimal !== undefined ? item.price_decimal : ''}</td>
                    <td class="text-center">${statusBadge}</td>
                    <td class="text-center">
                        <a href="/page/sales/stock_code_setup/view/${item.id}" class="action-btn action-btn-view" title="View">
                            <i class="fas fa-eye"></i>
                        </a>
                        <a href="/page/sales/stock_code_setup/edit/${item.id}" class="action-btn action-btn-edit" title="Edit">
                            <i class="fas fa-edit"></i>
                        </a>
                        <button class="action-btn action-btn-delete delete-btn" data-id="${item.id}" title="Delete">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
                `;
            });
        }
        
        $('#stockCodeTableBody').html(html);
    }
    
    // Render pagination
    function renderPagination(pagination) {
        totalPages = pagination.total_pages;
        currentPage = parseInt(pagination.current_page); // Ensure currentPage is number
        let html = '';
        
        // Previous button
        html += `
        <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
            <a class="page-link" href="#" data-page="${currentPage - 1}" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        `;
        
        // Page numbers
        const maxPagesToShow = 5;
        let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));
        let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);

        // Adjust startPage if endPage reaches the totalPages limit
        startPage = Math.max(1, endPage - maxPagesToShow + 1);

        if (startPage > 1) {
            html += `<li class="page-item"><a class="page-link" href="#" data-page="1">1</a></li>`;
            if (startPage > 2) {
                 html += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
            }
        }
        
        for (let i = startPage; i <= endPage; i++) {
            html += `
            <li class="page-item ${i === currentPage ? 'active' : ''}">
                <a class="page-link" href="#" data-page="${i}">${i}</a>
            </li>
            `;
        }

        if (endPage < totalPages) {
             if (endPage < totalPages - 1) {
                 html += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
             }
             html += `<li class="page-item"><a class="page-link" href="#" data-page="${totalPages}">${totalPages}</a></li>`;
         }
        
        // Next button
        html += `
        <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
            <a class="page-link" href="#" data-page="${currentPage + 1}" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
        `;
        
        $('#pagination').html(html);
    }
    
    // Update table info text
    function updateTableInfo(pagination) {
        const start = pagination.total === 0 ? 0 : ((currentPage - 1) * limit) + 1;
        const end = Math.min(start + limit - 1, pagination.total);
        
        $('#tableInfo').text(`Showing ${start} to ${end} of ${pagination.total} entries`);
    }
    
    // Handle pagination click
    $(document).on('click', '#pagination .page-link', function(e) {
        e.preventDefault();
        const pageLink = $(this);
        if (pageLink.parent().hasClass('disabled') || pageLink.parent().hasClass('active')) {
            return; // Do nothing if disabled or already active
        }
        const page = parseInt(pageLink.data('page'));
        
        if (!isNaN(page) && page >= 1 && page <= totalPages) {
            currentPage = page;
            loadStockCodes();
        }
    });
    
    // Handle rows per page change
    $('#rowsPerPage').on('change', function() {
        limit = parseInt($(this).val());
        currentPage = 1;
        loadStockCodes();
    });
    
    // Handle search
    $('#searchInput').on('keyup', function(e) {
        if (e.key === 'Enter') {
            search = $(this).val().trim();
            currentPage = 1;
            loadStockCodes();
        }
    });
    
    // Handle apply filters button
    $('#applyFilters').on('click', function() {
        search = $('#searchInput').val().trim();
        currentPage = 1;
        loadStockCodes();
    });
    
    // Handle column sorting
    $('.sortable').on('click', function() {
        const field = $(this).data('sort');
        
        // Toggle sort order if same field, otherwise default to asc
        if (field === sortField) {
            sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';
        } else {
            sortField = field;
            sortOrder = 'asc'; // Default to ascending when changing field
        }
        
        // Update UI to show sort direction
        $('.sortable').removeClass('sort-asc sort-desc');
        $(this).addClass(sortOrder === 'asc' ? 'sort-asc' : 'sort-desc');
        
        // Reload data with new sort
        currentPage = 1; // Reset to first page on sort
        loadStockCodes();
    });
    
    // Handle delete button click
    $(document).on('click', '.delete-btn', function() {
        const id = $(this).data('id');
        
        if (confirm('Are you sure you want to delete this stock code? This action cannot be undone.')) {
            $.ajax({
                url: `/page/sales/stock_code_setup/api/sales/stock-codes/${id}`, // Use correct API path
                type: 'DELETE',
                success: function(response) {
                    if (response.success) {
                        showSuccessMessage('Stock code deleted successfully.');
                        // Reload data, staying on current page if possible
                        loadStockCodes(); 
                    } else {
                        showErrorMessage(response.message || 'Failed to delete stock code');
                    }
                },
                error: function(xhr) {
                    let errorMessage = 'Error deleting stock code.';
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        errorMessage = xhr.responseJSON.message;
                    }
                    showErrorMessage(errorMessage);
                }
            });
        }
    });

    // Helper functions for displaying messages (replace with your actual notification system)
    function showSuccessMessage(message) {
        // Example: Use Bootstrap toasts or a dedicated notification library
        alert(message);
    }

    function showErrorMessage(message) {
        alert('Error: ' + message);
    }
});
</script>
</body>
</html>